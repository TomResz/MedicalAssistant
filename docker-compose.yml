name: medicalassistant
services:
  medicalassistant.api:
    image: ${DOCKER_REGISTRY-}medicalassistant
    container_name: medicalassistant.api
    build:
      context: .
      dockerfile: MedicalAssistant.API/Dockerfile
    networks:
      - medical-assistant-network
    ports:
    - "5000:5000"
    environment:
     - RUNNING_IN_DOCKER=true
     - ASPNETCORE_ENVIRONMENT=Development
     - ASPNETCORE_HTTP_PORTS=5000
    depends_on:
      - medicalassistant.database
  
  medicalassistant.seq:
    image: datalust/seq:latest
    container_name: medicalassistant.seq
    environment:
      - ACCEPT_EULA=Y
    ports:
     - 5341:5341
     - 5100:80 
    volumes:
      - ./.containers/medicalassistant-seq:/data
    networks:
      - medical-assistant-network

  medicalassistant.database:
    image: postgres:latest
    container_name: medicalassistant.database
    networks:
      - medical-assistant-network
    environment:
    - POSTGRES_DB=medicalassist
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
    - ./.containers/medicalassistant-db:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  medicalassistant.ui:
    container_name: medicalassistant.ui
    build:
      context: ./MedicalAssistant.UI
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./MedicalAssistant.UI/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - medical-assistant-network
    depends_on:
      - medicalassistant.api

  medicalassistant.pgadmin:
     container_name: medicalassistant.pgadmin
     image: dpage/pgadmin4
     environment:
       PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
       PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
     ports:
        - "5050:80"
     volumes:
       - ./.containers/medicalassistant-db/servers.json:/pgadmin4/servers.json:ro
     networks:
      - medical-assistant-network
     depends_on:
       - medicalassistant.database

networks:
  medical-assistant-network:
    driver: bridge