<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="Week" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Today" xml:space="preserve">
    <value>Today</value>
  </data>
  <data name="Tomorrow" xml:space="preserve">
    <value>Tomorrow</value>
  </data>
  <data name="Yesterday" xml:space="preserve">
    <value>Yesterday</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="Sign_in" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Empty_Email" xml:space="preserve">
    <value>Email cannot be empty!</value>
  </data>
  <data name="Empty_Password" xml:space="preserve">
    <value>Password cannot be empty!</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Log_out" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="LogOut_Dialog" xml:space="preserve">
    <value>Are you sure you want to log out?</value>
  </data>
  <data name="LoadingScreen" xml:space="preserve">
    <value>Please wait, loading ...</value>
  </data>
  <data name="MedicalAssist" xml:space="preserve">
    <value>Medical Assistant</value>
  </data>
  <data name="Visits" xml:space="preserve">
    <value>Visits</value>
  </data>
  <data name="Currents" xml:space="preserve">
    <value>Currents</value>
  </data>
  <data name="SignInPageTitle" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>Password is too short. Minimal length is {0}.</value>
  </data>
  <data name="PasswordTooLong" xml:space="preserve">
    <value>Password is too long. Maximum length is {0}.</value>
  </data>
  <data name="EmailInvalidPattern" xml:space="preserve">
    <value>Invalid email pattern.</value>
  </data>
  <data name="RegisterPageTitle" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Fullname" xml:space="preserve">
    <value>Fullname</value>
  </data>
  <data name="ConfirmedPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="EmptyFullname" xml:space="preserve">
    <value>Full name cannot be empty.</value>
  </data>
  <data name="PasswordMatch" xml:space="preserve">
    <value>Password must matches.</value>
  </data>
  <data name="FullNameTooShort" xml:space="preserve">
    <value>Full name is too short.</value>
  </data>
  <data name="FullNameTooLong" xml:space="preserve">
    <value>Full name is too long.</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="LoginPageDontHaveAccountQuestion" xml:space="preserve">
    <value>Do you not have an account ?</value>
  </data>
  <data name="LoginPageRegisterLink" xml:space="preserve">
    <value>Create an account</value>
  </data>
  <data name="RegisterPageQuestion" xml:space="preserve">
    <value>Do you have an account ?</value>
  </data>
  <data name="RegisterPageLoginLink" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="CreateAccountEmailInUsePrompt" xml:space="preserve">
    <value>The email address provided is already taken. </value>
  </data>
  <data name="SomethingWentWrong" xml:space="preserve">
    <value>Something went wrong...</value>
  </data>
  <data name="RegisterPageAccountCreated" xml:space="preserve">
    <value>The account was successfully set up.</value>
  </data>
  <data name="RegenerateCodeSendAgain" xml:space="preserve">
    <value>Send again verification link</value>
  </data>
  <data name="RegenerateCodePageTitle" xml:space="preserve">
    <value>Verification Code Regeneration</value>
  </data>
  <data name="RegenerateCodeEmailSent" xml:space="preserve">
    <value>The email with the verification code has been sent.</value>
  </data>
  <data name="GoToMainPage" xml:space="preserve">
    <value>Go to main page</value>
  </data>
  <data name="UnverifiedUserError" xml:space="preserve">
    <value>The account has not yet been activated.</value>
  </data>
  <data name="InvalidSignInCredentialsError" xml:space="preserve">
    <value>Incorrect email or password.</value>
  </data>
  <data name="InvalidLoginProviderError" xml:space="preserve">
    <value>The account uses an external authentication system ( Google or Facebook).</value>
  </data>
  <data name="AccountVerifiedSuccess" xml:space="preserve">
    <value>Your account has been successfully verified.</value>
  </data>
  <data name="VerificationCodeExpiredLabel" xml:space="preserve">
    <value>The verification code has expired.</value>
  </data>
  <data name="VerificationCodeNewCode" xml:space="preserve">
    <value>Generate new code</value>
  </data>
  <data name="AccountIsVerified" xml:space="preserve">
    <value>The account is already verified.</value>
  </data>
  <data name="UserNotFoundByGivenEmail" xml:space="preserve">
    <value>User with given email was not found.</value>
  </data>
  <data name="RegisterPageEmailSent" xml:space="preserve">
    <value>The activation link was sent to your email address.</value>
  </data>
  <data name="ForgetPasswordQuestion" xml:space="preserve">
    <value>Forgot your password ?</value>
  </data>
  <data name="PasswordChangeLabel" xml:space="preserve">
    <value>Password Change</value>
  </data>
  <data name="PasswordChangeBtnLabel" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="PasswordChangedPageEmailSent" xml:space="preserve">
    <value>An email has just been sent with a link to change your password.</value>
  </data>
  <data name="PasswordChanged" xml:space="preserve">
    <value>The password has been successfully changed.</value>
  </data>
  <data name="DialogYes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="DialogNo" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="DoctorName" xml:space="preserve">
    <value>Doctor</value>
  </data>
  <data name="VisitType" xml:space="preserve">
    <value>Visit Type</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="PostalCode" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="VisitPredictedTime" xml:space="preserve">
    <value>Predicted Time Of Visit</value>
  </data>
  <data name="AddVisitBtn" xml:space="preserve">
    <value>Create Visit</value>
  </data>
  <data name="GoToEditMode" xml:space="preserve">
    <value>Go To Edit Mode</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DialogVisitRemoving" xml:space="preserve">
    <value>Removing a Visit</value>
  </data>
  <data name="DialogVisitRemovingPrompt" xml:space="preserve">
    <value>Are you sure you want to delete this visit ?</value>
  </data>
  <data name="Visit" xml:space="preserve">
    <value>Visit</value>
  </data>
  <data name="AddVisitTitle" xml:space="preserve">
    <value>Create Visit</value>
  </data>
  <data name="CityCannotBeEmpty" xml:space="preserve">
    <value>The city name cannot be empty.</value>
  </data>
  <data name="IncorrectPostalCode" xml:space="preserve">
    <value>An invalid postal code has been entered.</value>
  </data>
  <data name="EmptyVisitType" xml:space="preserve">
    <value>The visit type must not be empty.</value>
  </data>
  <data name="EmptyStreet" xml:space="preserve">
    <value>The street name cannot be blank.</value>
  </data>
  <data name="EmptyDate" xml:space="preserve">
    <value>The date of the visit was not selected.</value>
  </data>
  <data name="EmptyVisitTime" xml:space="preserve">
    <value>Time cannot be empty.</value>
  </data>
  <data name="EmptyDoctorName" xml:space="preserve">
    <value>The doctor's data must not be blank.</value>
  </data>
  <data name="EmptyVisitDescription" xml:space="preserve">
    <value>The visit description must not be empty.</value>
  </data>
  <data name="EmptyPredictedTime" xml:space="preserve">
    <value>The predicted time of the visit must not be empty.</value>
  </data>
  <data name="Scheduler" xml:space="preserve">
    <value>Scheduler</value>
  </data>
  <data name="VisitHoursConflict" xml:space="preserve">
    <value>There is already a visit for the hours given.</value>
  </data>
  <data name="VisitDeletedText" xml:space="preserve">
    <value>Successfully removed the visit.</value>
  </data>
  <data name="SaveSettings" xml:space="preserve">
    <value>Save settings</value>
  </data>
  <data name="UnlockAccount" xml:space="preserve">
    <value>Unlock Account</value>
  </data>
  <data name="ActivationLinkExpired" xml:space="preserve">
    <value>Activation link expired ?</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="InvalidNewPassword" xml:space="preserve">
    <value>The new password must not be the same as the old one.</value>
  </data>
  <data name="VisitDetails" xml:space="preserve">
    <value>Visit Details</value>
  </data>
  <data name="ShowDetails" xml:space="preserve">
    <value>Show Details</value>
  </data>
  <data name="Notifications" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="EditNotification" xml:space="preserve">
    <value>Edit Notification</value>
  </data>
  <data name="EmptyNotificationDate" xml:space="preserve">
    <value>Date cannot be empty.</value>
  </data>
  <data name="EmptyNotificationTime" xml:space="preserve">
    <value>Time cannot be empty.</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddNotification" xml:space="preserve">
    <value>Add Notification</value>
  </data>
  <data name="NotificationAdded" xml:space="preserve">
    <value>Successfully added notification.</value>
  </data>
  <data name="VisitAlreadyTakenPlace" xml:space="preserve">
    <value>The visit has already taken place.</value>
  </data>
  <data name="ScheduledDateGreaterThanVisitDate" xml:space="preserve">
    <value>Scheduled date cannot be greater than visit date.</value>
  </data>
  <data name="NotificationEdited" xml:space="preserve">
    <value>The notification has been successfully edited.</value>
  </data>
  <data name="DeletingNotificationQuestion" xml:space="preserve">
    <value>Are you sure you want to delete this notification ?</value>
  </data>
  <data name="NotificationDeleting" xml:space="preserve">
    <value>Deleting Notification</value>
  </data>
  <data name="VisitNotFound" xml:space="preserve">
    <value>Such a medical visit no longer exists.</value>
  </data>
  <data name="PredictedVisitTime" xml:space="preserve">
    <value>Predicted Visit Time</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="NotificationOfVisit" xml:space="preserve">
    <value>Notification Of Visit</value>
  </data>
  <data name="VisitDateCommunicate" xml:space="preserve">
    <value>Date of visit: {0}</value>
  </data>
  <data name="Monday" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="Tuesday" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="Wednesday" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="Thursday" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="Friday" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="Saturday" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="Sunday" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="Attachments" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="AddAttachment" xml:space="preserve">
    <value>Add Attachment</value>
  </data>
  <data name="DownloadAttachment" xml:space="preserve">
    <value>Download Attachment</value>
  </data>
  <data name="AttachmentDeletePrompt" xml:space="preserve">
    <value>Are you sure you want to delete the attachment ?</value>
  </data>
  <data name="DeleteAttachment" xml:space="preserve">
    <value>Delete Attachment</value>
  </data>
  <data name="CurrentWeek" xml:space="preserve">
    <value>Current Week</value>
  </data>
  <data name="NextWeek" xml:space="preserve">
    <value>Next Week</value>
  </data>
  <data name="InvalidFileExtension" xml:space="preserve">
    <value>The attachment can only be submitted in .png, .jpg, or .pdf format.</value>
  </data>
  <data name="FileMaximumSize" xml:space="preserve">
    <value>The maximum file size is {0} MB.</value>
  </data>
  <data name="MarkAsRead" xml:space="preserve">
    <value>Mark as read</value>
  </data>
  <data name="AppLanguage" xml:space="preserve">
    <value>Application Language</value>
  </data>
  <data name="NotificationLanguage" xml:space="preserve">
    <value>Notification Language</value>
  </data>
  <data name="VisitNotifications" xml:space="preserve">
    <value>Notifications of visits</value>
  </data>
  <data name="EmailNotifications" xml:space="preserve">
    <value>Email notifications</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="WasRead" xml:space="preserve">
    <value>Was read ?</value>
  </data>
  <data name="PageSize" xml:space="preserve">
    <value>Page Size</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="Upcoming" xml:space="preserve">
    <value>Upcoming</value>
  </data>
  <data name="DateSent" xml:space="preserve">
    <value>Date Sent</value>
  </data>
  <data name="ScheduledDateNotification" xml:space="preserve">
    <value>Notification Scheduled Date</value>
  </data>
  <data name="Medication" xml:space="preserve">
    <value>Medication</value>
  </data>
  <data name="SelectVisit" xml:space="preserve">
    <value>Select a visit</value>
  </data>
  <data name="ChooseVisit" xml:space="preserve">
    <value>Select a visit</value>
  </data>
  <data name="NewNotifcation" xml:space="preserve">
    <value>New notification</value>
  </data>
  <data name="DateRange" xml:space="preserve">
    <value>Date Range</value>
  </data>
  <data name="MedicationName" xml:space="preserve">
    <value>Medication</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Morning" xml:space="preserve">
    <value>Morning</value>
  </data>
  <data name="Afternoon" xml:space="preserve">
    <value>Afternoon</value>
  </data>
  <data name="Evening" xml:space="preserve">
    <value>Evening</value>
  </data>
  <data name="Night" xml:space="preserve">
    <value>Night</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="NoVisitsToChoose" xml:space="preserve">
    <value>No appointments to choose from.</value>
  </data>
  <data name="AddingMedication" xml:space="preserve">
    <value>Adding the medication</value>
  </data>
  <data name="SelectedVisit" xml:space="preserve">
    <value>Selected visit</value>
  </data>
  <data name="DeleteSelectedVisit" xml:space="preserve">
    <value>Delete visit</value>
  </data>
  <data name="MedicineNameNotEmpty" xml:space="preserve">
    <value>Medicine name is required</value>
  </data>
  <data name="InvalidTimeOfDay" xml:space="preserve">
    <value>At least one of the time periods must be selected (Morning, Evening, Afternoon, or Night).</value>
  </data>
  <data name="RecommendationAdded" xml:space="preserve">
    <value>A recommendation was successfully added.</value>
  </data>
  <data name="MedicationEdited" xml:space="preserve">
    <value>The recommendation has been successfully updated.</value>
  </data>
  <data name="MedicationNotificationCommunicate" xml:space="preserve">
    <value>Notification of medication : {0}</value>
  </data>
</root>