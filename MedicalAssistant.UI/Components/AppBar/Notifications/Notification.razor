@using MedicalAssistant.UI.Shared.Options
@using MedicalAssistant.UI.Shared.Services.Abstraction
@using Microsoft.AspNetCore.SignalR.Client
@using System.IdentityModel.Tokens.Jwt
@using Microsoft.Extensions.Options


@if (UnReadNotifications > 0)
{
	<div class="mt-3">
		<MudBadge Content="@UnReadNotifications" Color="Color.Primary" Overlap="true" Class="mr-4 my-1 pr-0 pt-0" Max="9">
			<MudIconButton Icon="@Icons.Material.Filled.Notifications"
						   Color="@(isPopoverOpen ? Color.Primary : Color.Default)"
						   Style="padding-right: 0px; padding-top: 0px;"
						   OnClick="@ToggleCollapse" />
		</MudBadge>
		<MudOverlay @bind-Visible="isPopoverOpen" AutoClose="true" />
		<MudPopover AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight" Open="@isPopoverOpen" MaxHeight="350">
			<MudList T="string" Class="pa-2 docs-menu-list">
				<div class="d-flex justify-space-between align-center px-2">
					<MudText Typo="Typo.subtitle2">Notifications</MudText>
					<MudButton Class="ml-16 mr-2" Variant="MudBlazor.Variant.Text"
							   Color="Color.Primary" StartIcon="@Icons.Material.Filled.Done" OnClick="@ClearNotifications">
						Mark as read
					</MudButton>
				</div>
				@if (_models.Any())
				{
					@foreach (var notification in _models)
					{
						<MudListItem OnClick="@(() => GoToNotificationDetails(notification))" Class="px-2 py-0 rounded">
							<MudText Typo="Typo.subtitle2">@NotificationHelper.ToType(notification)</MudText>
							<MudText Typo="Typo.body2">@NotificationHelper.ToNotificationDescription(notification)</MudText>
						</MudListItem>
						<MudDivider Class="my-2" />
					}
				}
				else
				{
					<MudText Typo="Typo.body2">No new notifications</MudText>
				}
			</MudList>
		</MudPopover>
	</div>
}
else
{
	<MudIconButton Icon="@Icons.Material.Filled.Notifications" Color="Color.Inherit" />
}
