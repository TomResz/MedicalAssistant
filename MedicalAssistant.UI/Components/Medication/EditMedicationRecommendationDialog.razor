@using MedicalAssistant.UI.Components.Visits
<MudDialog TitleClass="text-center">
	<DialogContent>
		<MudForm @ref="_form" ValidationDelay="60" Model="@_viewModel" Validation="@_validator.ValidateValue" Class="mx-0 px-0">
			<MudGrid>
				<MudItem xs="12" sm="6">
					<MudTextField T="string" Label="@Translations.MedicationName" @bind-Value="@_viewModel.MedicineName"
								  Variant="MudBlazor.Variant.Text" MaxLength="30"
								  For="@(() => _viewModel.MedicineName)">
					</MudTextField>
				</MudItem>

				<MudItem xs="12" sm="6">
					<MudNumericField T="int" Label="@Translations.Quantity" Min="1"
									 @bind-Value="@_viewModel.Quantity"
									 Variant="MudBlazor.Variant.Text" />
				</MudItem>

				<MudItem xs="12">
					<MudTextField MaxLines="4" MaxLength="50" T="string" Label="@Translations.Note"
								  Variant="MudBlazor.Variant.Text" @bind-Value="@_viewModel.ExtraNote" />
				</MudItem>

				<MudItem xs="12">
					<MudDateRangePicker @bind-DateRange="@_viewModel.DateRange" PickerVariant="PickerVariant.Dialog"
										Label="@Translations.DateRange" Margin="Margin.Dense" />

				</MudItem>

				<MudItem xs="12" Style="padding-left: 0px; margin-left: 16px;">
					<div class="d-flex flex-column flex-sm-column flex-md-row">
						<div class="d-flex flex-column flex-sm-column flex-md-row flex-grow-1 rounded">
							<MudCheckBox T="bool" Class="flex-grow-1" @bind-Value="@_viewModel.MorningChecked">
								@Translations.Morning
							</MudCheckBox>

							<MudCheckBox T="bool" Class="flex-grow-1" @bind-Value="@_viewModel.AfternoonChecked">
								@Translations.Afternoon
							</MudCheckBox>

							<MudCheckBox T="bool" Class="flex-grow-1" @bind-Value="@_viewModel.EveningChecked">
								@Translations.Evening
							</MudCheckBox>

							<MudCheckBox T="bool" Class="flex-grow-1" @bind-Value="@_viewModel.NightChecked"
										 For="(() => _viewModel.NightChecked)">
								@Translations.Night
							</MudCheckBox>
						</div>
						@if (_visitDto is not null)
						{
							<VisitItem Visit="@_visitDto" Class="flex-grow-1 pa-4" ButtonVisible="false" />
						}
					</div>
				</MudItem>

			</MudGrid>

		</MudForm>

	</DialogContent>

	<DialogActions>
		<div class="d-flex flex-column flex-sm-column flex-md-row align-sm-center px-2 w-100">
			<MudButton StartIcon="@Icons.Material.Outlined.Add" Color="Color.Primary" Variant="MudBlazor.Variant.Filled"
					   Class="mx-2 my-1 px-2 flex-grow-1 align-self-stretch w-100" OnClick="@Submit">
				@Translations.Edit
			</MudButton>

			<PickVisitDialogButton ButtonName="@Translations.SelectVisit" OnVisitPicked="@VisitPick"
								   Class="mx-2 px-2 my-1 flex-grow-1 w-100 align-self-stretch" />

			<MudButton StartIcon="@Icons.Material.Outlined.Details" Color="Color.Primary" Variant="MudBlazor.Variant.Filled"
					   Class="mx-2 my-1 px-2 flex-grow-1 align-self-stretch w-100" OnClick="@( () =>  ShowDetails())">
				@Translations.ShowDetails
			</MudButton>

			@if (_visitDto is not null)
			{
				<MudButton StartIcon="@Icons.Material.Outlined.Delete" Color="Color.Error" Variant="MudBlazor.Variant.Filled"
						   Class="mx-2 my-1 px-2 flex-grow-1 w-100 align-self-stretch" OnClick="@Delete">
					@Translations.DeleteSelectedVisit
				</MudButton>
			}

			<MudButton StartIcon="@Icons.Material.Outlined.Delete" Color="Color.Error" Variant="MudBlazor.Variant.Filled"
					   Class="mx-2 my-1 px-2 flex-grow-1 w-100 align-self-stretch" OnClick="@DeleteMedication">
				@Translations.Delete
			</MudButton>


			<MudButton StartIcon="@Icons.Material.Outlined.Cancel" Color="Color.Error" Variant="MudBlazor.Variant.Filled"
					   Class="mx-2 my-1 px-2 flex-grow-1 w-100 align-self-stretch" OnClick="@Cancel">
				@Translations.Cancel
			</MudButton>
		</div>
	</DialogActions>

</MudDialog>

<style>
	.mud-dialog {
		height: auto !important;
		max-height: 90vh;
		overflow-y: auto;
	}

	.mud-dialog-content {
		height: auto !important;
		max-height: 100%;
		overflow: auto;
	}
</style>
