<MudGrid Justify="Justify.Center" Style="overflow-x: hidden;">
    <MudItem xs="12">
        <MudText Typo="Typo.h4" Class="text-center">@ListName.ToUpper()</MudText>
    </MudItem>
    <MudItem xs="12">
        <div class="d-flex flex-row pa-2 justify-content-center">
            <div>
                <CalendarIconComponent Date="@DateOfMonday"/>
            </div>
            <div class="align-content-center">
                <MudIcon Icon="@Icons.Material.Outlined.ArrowForward" Size="Size.Large" Class="mx-2 text-center" ></MudIcon>
            </div>
            <div>
                <CalendarIconComponent Date="@DateOfSunday"/>
            </div>
        </div>
    </MudItem>
</MudGrid>
@foreach (var day in _days)
{
    @if (GroupedVisits[day].Any())
    {
        <MudPaper Elevation="4" Class="pa-4 my-2 mx-2">
            <MudGrid Justify="Justify.Center" Style="overflow-x: hidden;">
                <MudItem xs="12">
                    <MudText Typo="Typo.h6" Align="Align.Center"> @DayOfWeekToString(day)</MudText>
                </MudItem>

                @foreach (var visit in GroupedVisits[day].OrderBy(x => x.Date))
                {
                    <MudItem xs="12" sm="9" md="6">
                        <VisitItem Visit="visit"/>
                    </MudItem>
                }
            </MudGrid>
        </MudPaper>
    }
}